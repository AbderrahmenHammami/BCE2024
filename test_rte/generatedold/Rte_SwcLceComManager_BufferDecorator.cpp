/********************************************************************
 * Automatically generated by ARUnit
 * Filename: Rte_SwcLceComManager_BufferDecorator.cpp
 ********************************************************************/

#include <iostream>
#include <fstream>
#include <cstdio>
#include <cstring>

#include "gmock/gmock.h"        
#include "Rte_SwcLceComManager_BufferDecorator.h"

using ::testing::_;    

Rte_SwcLceComManager_BufferDecorator::Rte_SwcLceComManager_BufferDecorator(Rte_SwcLceComManager_Interface* component) :
    Rte_SwcLceComManager_Interface()
    , _component (component)
,  _Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_DR_Buf (0)
,  _Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_POS_Buf (0)
,  _Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_PAR_Buf (0)
,  _Rte_Read_SwcLceComManager_comLight_Ctrl_Inputs_ST_LP_LIN_Buf (0)
,  _Rte_Read_SwcLceComManager_comBrightness_Rain_Sensor_ST_RB_LIN_Buf (0)
,  _Rte_Read_SwcLceComManager_comCar_State_VEH_ST_Buf (0)
,  _Rte_Read_SwcLceComManager_comMotor_Speed_Motor_Speed_Buf (0)
, _Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_DR_ReturnValue (0)
, _Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_POS_ReturnValue (0)
, _Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_PAR_ReturnValue (0)
, _Rte_Read_SwcLceComManager_comLight_Ctrl_Inputs_ST_LP_LIN_ReturnValue (0)
, _Rte_Read_SwcLceComManager_comBrightness_Rain_Sensor_ST_RB_LIN_ReturnValue (0)
, _Rte_Read_SwcLceComManager_comCar_State_VEH_ST_ReturnValue (0)
, _Rte_Read_SwcLceComManager_comMotor_Speed_Motor_Speed_ReturnValue (0)
{
}
IComLight_Ctrl_Inputs_CTR_FN_DR_Type Rte_SwcLceComManager_BufferDecorator:: get_Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_DR_Buf() const
{
    return _Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_DR_Buf;
}
IComLight_Ctrl_Inputs_CTR_FN_POS_Type Rte_SwcLceComManager_BufferDecorator:: get_Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_POS_Buf() const
{
    return _Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_POS_Buf;
}
IComLight_Ctrl_Inputs_CTR_FN_PAR_Type Rte_SwcLceComManager_BufferDecorator:: get_Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_PAR_Buf() const
{
    return _Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_PAR_Buf;
}
IComLight_Ctrl_Inputs_ST_LP_LIN_Type Rte_SwcLceComManager_BufferDecorator:: get_Rte_Read_SwcLceComManager_comLight_Ctrl_Inputs_ST_LP_LIN_Buf() const
{
    return _Rte_Read_SwcLceComManager_comLight_Ctrl_Inputs_ST_LP_LIN_Buf;
}
IComBrightness_Rain_Sensor_ST_RB_LIN_Type Rte_SwcLceComManager_BufferDecorator:: get_Rte_Read_SwcLceComManager_comBrightness_Rain_Sensor_ST_RB_LIN_Buf() const
{
    return _Rte_Read_SwcLceComManager_comBrightness_Rain_Sensor_ST_RB_LIN_Buf;
}
IComCar_State_VEH_ST_Type Rte_SwcLceComManager_BufferDecorator:: get_Rte_Read_SwcLceComManager_comCar_State_VEH_ST_Buf() const
{
    return _Rte_Read_SwcLceComManager_comCar_State_VEH_ST_Buf;
}
IComMotor_Speed_Motor_Speed_Type Rte_SwcLceComManager_BufferDecorator:: get_Rte_Read_SwcLceComManager_comMotor_Speed_Motor_Speed_Buf() const
{
    return _Rte_Read_SwcLceComManager_comMotor_Speed_Motor_Speed_Buf;
}
Std_ReturnType Rte_SwcLceComManager_BufferDecorator:: get_Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_DR_ReturnValue() const
{
    return _Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_DR_ReturnValue;
}
Std_ReturnType Rte_SwcLceComManager_BufferDecorator:: get_Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_POS_ReturnValue() const
{
    return _Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_POS_ReturnValue;
}
Std_ReturnType Rte_SwcLceComManager_BufferDecorator:: get_Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_PAR_ReturnValue() const
{
    return _Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_PAR_ReturnValue;
}
Std_ReturnType Rte_SwcLceComManager_BufferDecorator:: get_Rte_Read_SwcLceComManager_comLight_Ctrl_Inputs_ST_LP_LIN_ReturnValue() const
{
    return _Rte_Read_SwcLceComManager_comLight_Ctrl_Inputs_ST_LP_LIN_ReturnValue;
}
Std_ReturnType Rte_SwcLceComManager_BufferDecorator:: get_Rte_Read_SwcLceComManager_comBrightness_Rain_Sensor_ST_RB_LIN_ReturnValue() const
{
    return _Rte_Read_SwcLceComManager_comBrightness_Rain_Sensor_ST_RB_LIN_ReturnValue;
}
Std_ReturnType Rte_SwcLceComManager_BufferDecorator:: get_Rte_Read_SwcLceComManager_comCar_State_VEH_ST_ReturnValue() const
{
    return _Rte_Read_SwcLceComManager_comCar_State_VEH_ST_ReturnValue;
}
Std_ReturnType Rte_SwcLceComManager_BufferDecorator:: get_Rte_Read_SwcLceComManager_comMotor_Speed_Motor_Speed_ReturnValue() const
{
    return _Rte_Read_SwcLceComManager_comMotor_Speed_Motor_Speed_ReturnValue;
}

/////////////////////////////////////////
// Overwritten mock functions. Delegates and writes buffer values.

Std_ReturnType Rte_SwcLceComManager_BufferDecorator:: Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_DR (IComLight_Ctrl_Inputs_CTR_FN_DR_Type CTR_FN_DR)
{
    Std_ReturnType _returnValue = _component->Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_DR(CTR_FN_DR);
    // save to buffer ...
     _Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_DR_Buf = CTR_FN_DR;
     _Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_DR_ReturnValue = _returnValue;
    return _returnValue;
}
Std_ReturnType Rte_SwcLceComManager_BufferDecorator:: Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_POS (IComLight_Ctrl_Inputs_CTR_FN_POS_Type CTR_FN_POS)
{
    Std_ReturnType _returnValue = _component->Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_POS(CTR_FN_POS);
    // save to buffer ...
     _Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_POS_Buf = CTR_FN_POS;
     _Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_POS_ReturnValue = _returnValue;
    return _returnValue;
}
Std_ReturnType Rte_SwcLceComManager_BufferDecorator:: Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_PAR (IComLight_Ctrl_Inputs_CTR_FN_PAR_Type CTR_FN_PAR)
{
    Std_ReturnType _returnValue = _component->Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_PAR(CTR_FN_PAR);
    // save to buffer ...
     _Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_PAR_Buf = CTR_FN_PAR;
     _Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_PAR_ReturnValue = _returnValue;
    return _returnValue;
}
Std_ReturnType Rte_SwcLceComManager_BufferDecorator:: Rte_Read_SwcLceComManager_comLight_Ctrl_Inputs_ST_LP_LIN (IComLight_Ctrl_Inputs_ST_LP_LIN_Type* ST_LP_LIN)
{
    Std_ReturnType _returnValue = _component->Rte_Read_SwcLceComManager_comLight_Ctrl_Inputs_ST_LP_LIN(ST_LP_LIN);
    // save to buffer ...
     _Rte_Read_SwcLceComManager_comLight_Ctrl_Inputs_ST_LP_LIN_Buf = *ST_LP_LIN;
     _Rte_Read_SwcLceComManager_comLight_Ctrl_Inputs_ST_LP_LIN_ReturnValue = _returnValue;
    return _returnValue;
}
Std_ReturnType Rte_SwcLceComManager_BufferDecorator:: Rte_Read_SwcLceComManager_comBrightness_Rain_Sensor_ST_RB_LIN (IComBrightness_Rain_Sensor_ST_RB_LIN_Type* ST_RB_LIN)
{
    Std_ReturnType _returnValue = _component->Rte_Read_SwcLceComManager_comBrightness_Rain_Sensor_ST_RB_LIN(ST_RB_LIN);
    // save to buffer ...
     _Rte_Read_SwcLceComManager_comBrightness_Rain_Sensor_ST_RB_LIN_Buf = *ST_RB_LIN;
     _Rte_Read_SwcLceComManager_comBrightness_Rain_Sensor_ST_RB_LIN_ReturnValue = _returnValue;
    return _returnValue;
}
Std_ReturnType Rte_SwcLceComManager_BufferDecorator:: Rte_Read_SwcLceComManager_comCar_State_VEH_ST (IComCar_State_VEH_ST_Type* VEH_ST)
{
    Std_ReturnType _returnValue = _component->Rte_Read_SwcLceComManager_comCar_State_VEH_ST(VEH_ST);
    // save to buffer ...
     _Rte_Read_SwcLceComManager_comCar_State_VEH_ST_Buf = *VEH_ST;
     _Rte_Read_SwcLceComManager_comCar_State_VEH_ST_ReturnValue = _returnValue;
    return _returnValue;
}
Std_ReturnType Rte_SwcLceComManager_BufferDecorator:: Rte_Read_SwcLceComManager_comMotor_Speed_Motor_Speed (IComMotor_Speed_Motor_Speed_Type* Motor_Speed)
{
    Std_ReturnType _returnValue = _component->Rte_Read_SwcLceComManager_comMotor_Speed_Motor_Speed(Motor_Speed);
    // save to buffer ...
     _Rte_Read_SwcLceComManager_comMotor_Speed_Motor_Speed_Buf = *Motor_Speed;
     _Rte_Read_SwcLceComManager_comMotor_Speed_Motor_Speed_ReturnValue = _returnValue;
    return _returnValue;
}
