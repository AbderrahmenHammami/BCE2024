/********************************************************************
 * Automatically generated by ARUnit
 * Filename: Rte_SwcLceComManager.cpp
 ********************************************************************/

#define IN_RTE_C

#include "Rte_SwcLceComManager.h"
#include "Rte_SwcLceComManager_Interface.h"

namespace
{
/** Mock instance, must be initialized before using it. */
Rte_SwcLceComManager_Interface* gpRteMock = 0;
}

/** Call setter before using mock object. */
void Rte_SwcLceComManager_Mock_Set(Rte_SwcLceComManager_Interface* pRteMock)
{
    gpRteMock = pRteMock;
}

/* RTE operations */
Std_ReturnType Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_DR (IComLight_Ctrl_Inputs_CTR_FN_DR_Type CTR_FN_DR)
{
    return gpRteMock->Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_DR(CTR_FN_DR);    
}
Std_ReturnType Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_POS (IComLight_Ctrl_Inputs_CTR_FN_POS_Type CTR_FN_POS)
{
    return gpRteMock->Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_POS(CTR_FN_POS);    
}
Std_ReturnType Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_PAR (IComLight_Ctrl_Inputs_CTR_FN_PAR_Type CTR_FN_PAR)
{
    return gpRteMock->Rte_Write_SwcLceComManager_comCTR_EL_F_CTR_FN_PAR(CTR_FN_PAR);    
}
Std_ReturnType Rte_Read_SwcLceComManager_comLight_Ctrl_Inputs_ST_LP_LIN (IComLight_Ctrl_Inputs_ST_LP_LIN_Type* ST_LP_LIN)
{
    return gpRteMock->Rte_Read_SwcLceComManager_comLight_Ctrl_Inputs_ST_LP_LIN(ST_LP_LIN);    
}
Std_ReturnType Rte_Read_SwcLceComManager_comBrightness_Rain_Sensor_ST_RB_LIN (IComBrightness_Rain_Sensor_ST_RB_LIN_Type* ST_RB_LIN)
{
    return gpRteMock->Rte_Read_SwcLceComManager_comBrightness_Rain_Sensor_ST_RB_LIN(ST_RB_LIN);    
}
Std_ReturnType Rte_Read_SwcLceComManager_comCar_State_VEH_ST (IComCar_State_VEH_ST_Type* VEH_ST)
{
    return gpRteMock->Rte_Read_SwcLceComManager_comCar_State_VEH_ST(VEH_ST);    
}
Std_ReturnType Rte_Read_SwcLceComManager_comMotor_Speed_Motor_Speed (IComMotor_Speed_Motor_Speed_Type* Motor_Speed)
{
    return gpRteMock->Rte_Read_SwcLceComManager_comMotor_Speed_Motor_Speed(Motor_Speed);    
}





const Rte_CDS_SwcLceComManager Rte_Instance_SwcLceComManager = {
    /* Data Handles section*/
    /* Per-Instance Memory Handles section*/
    /* Inter-runnable Variable Handles section*/
    /* Calibration Parameter Handles section*/
    /* Exclusive-area Handles section*/
    /* Port API Handles section*/
    /* Inter Runnable Variable API Handles section*/
    /* dummy value */
    0
};

const Rte_CDS_SwcLceComManager * const Rte_Inst_SwcLceComManager = &Rte_Instance_SwcLceComManager;



